// Autogenerated from Pigeon (v3.1.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, FCPListItemPlayingIndicatorLocation) {
  FCPListItemPlayingIndicatorLocationTrailing = 0,
  FCPListItemPlayingIndicatorLocationLeading = 1,
};

typedef NS_ENUM(NSUInteger, FCPConnectionStatus) {
  FCPConnectionStatusConnected = 0,
  FCPConnectionStatusBackground = 1,
  FCPConnectionStatusDisconnected = 2,
  FCPConnectionStatusUnknown = 3,
};

typedef NS_ENUM(NSUInteger, FCPListItemAccessoryType) {
  FCPListItemAccessoryTypeNone = 0,
  FCPListItemAccessoryTypeCloud = 1,
  FCPListItemAccessoryTypeDisclosureIndicator = 2,
};

typedef NS_ENUM(NSUInteger, FCPBarButtonStyle) {
  FCPBarButtonStyleNone = 0,
  FCPBarButtonStyleRounded = 1,
};

typedef NS_ENUM(NSUInteger, FCPInformationTemplateLayout) {
  FCPInformationTemplateLayoutLeading = 0,
  FCPInformationTemplateLayoutTwoColumn = 1,
};

typedef NS_ENUM(NSUInteger, FCPTextButtonStyle) {
  FCPTextButtonStyleNormal = 0,
  FCPTextButtonStyleCancel = 1,
  FCPTextButtonStyleConfirm = 2,
};

typedef NS_ENUM(NSUInteger, FCPAlertActionStyle) {
  FCPAlertActionStyleNormal = 0,
  FCPAlertActionStyleCancel = 1,
  FCPAlertActionStyleDestructive = 2,
};

@class FCPListItemMessage;
@class FCPListSectionMessage;
@class FCPBarButtonMessage;
@class FCPListTemplateMessage;
@class FCPAlertActionMessage;
@class FCPAlertTemplateMessage;
@class FCPActionSheetTemplateMessage;
@class FCPTextButtonMessage;
@class FCPGridButtonMessage;
@class FCPGridTemplateMessage;
@class FCPInformationItemMessage;
@class FCPInformationTemplateMessage;
@class FCPNowPlayingImageButtonMessage;
@class FCPNowPlayingButtonMessage;
@class FCPConnectionStatusChangeMessage;
@class FCPPointOfInterestMessage;
@class FCPPointOfInterestTemplateMessage;
@class FCPTabBarTemplateMessage;
@class FCPTemplateMessage;
@class FCPImageMessage;

@interface FCPListItemMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    text:(NSString *)text
    detailText:(nullable NSString *)detailText
    image:(nullable FCPImageMessage *)image
    playbackProgress:(nullable NSNumber *)playbackProgress
    isPlaying:(nullable NSNumber *)isPlaying
    onPress:(NSNumber *)onPress
    playingIndicatorLocation:(FCPListItemPlayingIndicatorLocation)playingIndicatorLocation
    accessoryType:(FCPListItemAccessoryType)accessoryType;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * text;
@property(nonatomic, copy, nullable) NSString * detailText;
@property(nonatomic, strong, nullable) FCPImageMessage * image;
@property(nonatomic, strong, nullable) NSNumber * playbackProgress;
@property(nonatomic, strong, nullable) NSNumber * isPlaying;
@property(nonatomic, strong) NSNumber * onPress;
@property(nonatomic, assign) FCPListItemPlayingIndicatorLocation playingIndicatorLocation;
@property(nonatomic, assign) FCPListItemAccessoryType accessoryType;
@end

@interface FCPListSectionMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    header:(nullable NSString *)header
    items:(NSArray<FCPListItemMessage *> *)items;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy, nullable) NSString * header;
@property(nonatomic, strong) NSArray<FCPListItemMessage *> * items;
@end

@interface FCPBarButtonMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(NSString *)title
    style:(FCPBarButtonStyle)style;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, assign) FCPBarButtonStyle style;
@end

@interface FCPListTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(nullable NSString *)title
    sections:(NSArray<FCPListSectionMessage *> *)sections
    emptyViewTitleVariants:(nullable NSArray<NSString *> *)emptyViewTitleVariants
    emptyViewSubtitleVariants:(nullable NSArray<NSString *> *)emptyViewSubtitleVariants
    showsTabBadge:(NSNumber *)showsTabBadge
    systemIcon:(NSString *)systemIcon
    backButton:(nullable FCPBarButtonMessage *)backButton;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy, nullable) NSString * title;
@property(nonatomic, strong) NSArray<FCPListSectionMessage *> * sections;
@property(nonatomic, strong, nullable) NSArray<NSString *> * emptyViewTitleVariants;
@property(nonatomic, strong, nullable) NSArray<NSString *> * emptyViewSubtitleVariants;
@property(nonatomic, strong) NSNumber * showsTabBadge;
@property(nonatomic, copy) NSString * systemIcon;
@property(nonatomic, strong, nullable) FCPBarButtonMessage * backButton;
@end

@interface FCPAlertActionMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(NSString *)title
    style:(FCPAlertActionStyle)style;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, assign) FCPAlertActionStyle style;
@end

@interface FCPAlertTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    titleVariants:(NSArray<NSString *> *)titleVariants
    actions:(NSArray<FCPAlertActionMessage *> *)actions
    onPresent:(NSNumber *)onPresent;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, strong) NSArray<NSString *> * titleVariants;
@property(nonatomic, strong) NSArray<FCPAlertActionMessage *> * actions;
@property(nonatomic, strong) NSNumber * onPresent;
@end

@interface FCPActionSheetTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(nullable NSString *)title
    message:(nullable NSString *)message
    actions:(NSArray<FCPAlertActionMessage *> *)actions;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy, nullable) NSString * title;
@property(nonatomic, copy, nullable) NSString * message;
@property(nonatomic, strong) NSArray<FCPAlertActionMessage *> * actions;
@end

@interface FCPTextButtonMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(NSString *)title
    style:(FCPTextButtonStyle)style;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, assign) FCPTextButtonStyle style;
@end

@interface FCPGridButtonMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    titleVariants:(NSArray<NSString *> *)titleVariants
    image:(FCPImageMessage *)image;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, strong) NSArray<NSString *> * titleVariants;
@property(nonatomic, strong) FCPImageMessage * image;
@end

@interface FCPGridTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(NSString *)title
    buttons:(NSArray<FCPGridButtonMessage *> *)buttons;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, strong) NSArray<FCPGridButtonMessage *> * buttons;
@end

@interface FCPInformationItemMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(nullable NSString *)title
    detail:(nullable NSString *)detail;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy, nullable) NSString * title;
@property(nonatomic, copy, nullable) NSString * detail;
@end

@interface FCPInformationTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(NSString *)title
    layout:(FCPInformationTemplateLayout)layout
    actions:(NSArray<FCPTextButtonMessage *> *)actions
    informationItems:(NSArray<FCPInformationItemMessage *> *)informationItems;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, assign) FCPInformationTemplateLayout layout;
@property(nonatomic, strong) NSArray<FCPTextButtonMessage *> * actions;
@property(nonatomic, strong) NSArray<FCPInformationItemMessage *> * informationItems;
@end

@interface FCPNowPlayingImageButtonMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    isEnabled:(NSNumber *)isEnabled
    isSelected:(NSNumber *)isSelected
    image:(FCPImageMessage *)image;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, strong) NSNumber * isEnabled;
@property(nonatomic, strong) NSNumber * isSelected;
@property(nonatomic, strong) FCPImageMessage * image;
@end

@interface FCPNowPlayingButtonMessage : NSObject
+ (instancetype)makeWithImageButton:(nullable FCPNowPlayingImageButtonMessage *)imageButton;
@property(nonatomic, strong, nullable) FCPNowPlayingImageButtonMessage * imageButton;
@end

@interface FCPConnectionStatusChangeMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithStatus:(FCPConnectionStatus)status;
@property(nonatomic, assign) FCPConnectionStatus status;
@end

@interface FCPPointOfInterestMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    latitude:(NSNumber *)latitude
    longitude:(NSNumber *)longitude
    title:(NSString *)title
    subtitle:(nullable NSString *)subtitle
    summary:(nullable NSString *)summary
    detailTitle:(nullable NSString *)detailTitle
    detailsSubtitle:(nullable NSString *)detailsSubtitle
    detailSummary:(nullable NSString *)detailSummary
    image:(nullable FCPImageMessage *)image
    primaryButton:(nullable FCPTextButtonMessage *)primaryButton
    secondaryButton:(nullable FCPTextButtonMessage *)secondaryButton;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, strong) NSNumber * latitude;
@property(nonatomic, strong) NSNumber * longitude;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, copy, nullable) NSString * subtitle;
@property(nonatomic, copy, nullable) NSString * summary;
@property(nonatomic, copy, nullable) NSString * detailTitle;
@property(nonatomic, copy, nullable) NSString * detailsSubtitle;
@property(nonatomic, copy, nullable) NSString * detailSummary;
@property(nonatomic, strong, nullable) FCPImageMessage * image;
@property(nonatomic, strong, nullable) FCPTextButtonMessage * primaryButton;
@property(nonatomic, strong, nullable) FCPTextButtonMessage * secondaryButton;
@end

@interface FCPPointOfInterestTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(NSString *)title
    poi:(NSArray<FCPPointOfInterestMessage *> *)poi;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy) NSString * title;
@property(nonatomic, strong) NSArray<FCPPointOfInterestMessage *> * poi;
@end

@interface FCPTabBarTemplateMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithElementId:(NSString *)elementId
    title:(nullable NSString *)title
    templates:(NSArray<FCPListTemplateMessage *> *)templates;
@property(nonatomic, copy) NSString * elementId;
@property(nonatomic, copy, nullable) NSString * title;
@property(nonatomic, strong) NSArray<FCPListTemplateMessage *> * templates;
@end

@interface FCPTemplateMessage : NSObject
+ (instancetype)makeWithGrid:(nullable FCPGridTemplateMessage *)grid
    information:(nullable FCPInformationTemplateMessage *)information
    list:(nullable FCPListTemplateMessage *)list
    poi:(nullable FCPPointOfInterestTemplateMessage *)poi
    tabBar:(nullable FCPTabBarTemplateMessage *)tabBar;
@property(nonatomic, strong, nullable) FCPGridTemplateMessage * grid;
@property(nonatomic, strong, nullable) FCPInformationTemplateMessage * information;
@property(nonatomic, strong, nullable) FCPListTemplateMessage * list;
@property(nonatomic, strong, nullable) FCPPointOfInterestTemplateMessage * poi;
@property(nonatomic, strong, nullable) FCPTabBarTemplateMessage * tabBar;
@end

@interface FCPImageMessage : NSObject
+ (instancetype)makeWithSystemName:(nullable NSString *)systemName
    flutterAsset:(nullable NSString *)flutterAsset
    data:(nullable FlutterStandardTypedData *)data;
@property(nonatomic, copy, nullable) NSString * systemName;
@property(nonatomic, copy, nullable) NSString * flutterAsset;
@property(nonatomic, strong, nullable) FlutterStandardTypedData * data;
@end

/// The codec used by FCarplayApi.
NSObject<FlutterMessageCodec> *FCarplayApiGetCodec(void);

@protocol FCarplayApi
- (void)setRootTemplateTemplate:(FCPTemplateMessage *)template animate:(NSNumber *)animate completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)pushTemplateTemplate:(FCPTemplateMessage *)template animate:(NSNumber *)animate completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)pushNowPlayingAnimated:(NSNumber *)animated completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)popTemplateAnimated:(NSNumber *)animated completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)popToRootTemplateAnimated:(NSNumber *)animated completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)presentAlertTemplateTemplate:(FCPAlertTemplateMessage *)template animated:(NSNumber *)animated completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)presentActionSheetTemplateTemplate:(FCPActionSheetTemplateMessage *)template animated:(NSNumber *)animated completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)dismissTemplateAnimated:(NSNumber *)animated completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)updateNowPlayingButtonsButtons:(NSArray<FCPNowPlayingButtonMessage *> *)buttons error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)setNowPlayingUpNextButtonTitleTitle:(NSString *)title error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)enableNowPlayingUpNextButtonTitle:(nullable NSString *)title error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)disableNowPlayingUpNextButtonWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)updateListItemUpdatedItem:(FCPListItemMessage *)updatedItem error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)updateListSectionsListId:(NSString *)listId sections:(NSArray<FCPListSectionMessage *> *)sections error:(FlutterError *_Nullable *_Nonnull)error;
- (void)onListItemSelectedCompleteListItemId:(NSString *)listItemId error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FCarplayApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FCarplayApi> *_Nullable api);

/// The codec used by FCarplayEventsApi.
NSObject<FlutterMessageCodec> *FCarplayEventsApiGetCodec(void);

@interface FCarplayEventsApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)onConnectionChangeData:(FCPConnectionStatusChangeMessage *)data completion:(void(^)(NSError *_Nullable))completion;
- (void)onListItemSelectedElementId:(NSString *)elementId completion:(void(^)(NSError *_Nullable))completion;
- (void)onAlertActionPressedElementId:(NSString *)elementId completion:(void(^)(NSError *_Nullable))completion;
- (void)onPresentStateChangedCompleted:(NSNumber *)completed completion:(void(^)(NSError *_Nullable))completion;
- (void)onGridButtonPressedElementId:(NSString *)elementId completion:(void(^)(NSError *_Nullable))completion;
- (void)onBarButtonPressedElementId:(NSString *)elementId completion:(void(^)(NSError *_Nullable))completion;
- (void)onTextButtonPressedElementId:(NSString *)elementId completion:(void(^)(NSError *_Nullable))completion;
- (void)onNowPlayingButtonPressedElementId:(NSString *)elementId completion:(void(^)(NSError *_Nullable))completion;
- (void)onNowPlayingUpNextButtonPressedWithCompletion:(void(^)(NSError *_Nullable))completion;
- (void)onHistoryStackChangedHistoryStack:(NSArray<NSString *> *)historyStack completion:(void(^)(NSError *_Nullable))completion;
@end
NS_ASSUME_NONNULL_END
